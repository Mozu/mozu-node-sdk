

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CodeZu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

var Client = require('../../../client'), constants = Client.constants;

module.exports = Client.sub({
	getB2BAccounts: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&fields={fields}&q={q}&qLimit={qLimit}&responseFields={responseFields}&responseGroups={responseGroups}'
	}),
	getB2BAccountAttribute: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}?responseFields={responseFields}'
	}),
	getB2BAccountAttributes: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/attributes?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&responseFields={responseFields}'
	}),
	getUserRolesAsync: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles?responseFields={responseFields}'
	}),
	getUsers: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/users?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&q={q}&qLimit={qLimit}&responseFields={responseFields}'
	}),
	getB2BAccount: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}?responseFields={responseFields}'
	}),
	addAccount: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/?responseFields={responseFields}'
	}),
	addB2BAccountAttribute: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/attributes?responseFields={responseFields}'
	}),
	addUserRoleAsync: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles/{roleId}'
	}),
	addUser: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/user?responseFields={responseFields}'
	}),
	updateB2BAccountAttribute: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}?responseFields={responseFields}'
	}),
	removeUser: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/user/{userId}/remove'
	}),
	updateUser: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/user/{userId}?responseFields={responseFields}'
	}),
	updateAccount: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}?responseFields={responseFields}'
	}),
	deleteB2BAccountAttribute: Client.method({
		method: constants.verbs.DELETE,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}'
	}),
	removeUserRoleAsync: Client.method({
		method: constants.verbs.DELETE,
		url: '{+tenantPod}api/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles/{roleId}'
	})
});
